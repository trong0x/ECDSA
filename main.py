from core.wallet import create_wallet, get_wallet_info
from core.transaction import create_transaction, sign_transaction
from core.verification import full_verification_flow

def main():
    """Menu ch√≠nh"""
    print(" H·ªÜ TH·ªêNG X√ÅC TH·ª∞C V√ç ƒêI·ªÜN T·ª¨ ECDSA ")
    
    while True:
        print("\n" + "="*50)
        print("1. T·∫°o v√≠ m·ªõi")
        print("2. T·∫°o giao d·ªãch")
        print("3. X√°c th·ª±c giao d·ªãch")  # Ch·ª©c nƒÉng ch√≠nh
        print("4. Xem th√¥ng tin v√≠")
        print("0. Tho√°t")
        print("="*50)
        
        choice = input("Ch·ªçn ch·ª©c nƒÉng: ")
        
        if choice == "1":
            # T·∫°o v√≠ m·ªõi
            print("\nT·∫†O V√ç M·ªöI")
            name = input("Nh·∫≠p t√™n ch·ªß v√≠: ")
            try:
                wallet_info = create_wallet(name)
                print(f"T·∫°o v√≠ th√†nh c√¥ng!")
                print(f"T√™n: {wallet_info['name']}")
                print(f"ƒê·ªãa ch·ªâ: {wallet_info['address']}")
                print(f"S·ªë d∆∞ ban ƒë·∫ßu: {wallet_info['balance']:,} VND")
            except Exception as e:
                print(f"L·ªói t·∫°o v√≠: {e}")
                
        elif choice == "2":
            # T·∫°o v√† k√Ω giao d·ªãch
            print("\nT·∫†O GIAO D·ªäCH")
            from_user = input("Ng∆∞·ªùi g·ª≠i: ")
            to_user = input("Ng∆∞·ªùi nh·∫≠n: ")
            try:
                amount = int(input("S·ªë ti·ªÅn (VND): "))
                
                # T·∫°o giao d·ªãch
                transaction = create_transaction(from_user, to_user, amount)
                
                # K√Ω giao d·ªãch
                signed_tx = sign_transaction(transaction, from_user)
                
                print("T·∫°o v√† k√Ω giao d·ªãch th√†nh c√¥ng!")
                print(f"ID giao d·ªãch: {signed_tx['id']}")
                print(f"T·ª´: {signed_tx['from']} ‚Üí ƒê·∫øn: {signed_tx['to']}")
                print(f"S·ªë ti·ªÅn: {signed_tx['amount']:,} VND")
                print(f"ƒê√£ k√Ω: {'C√≥' if signed_tx.get('signature') else 'Kh√¥ng'}")
                
            except ValueError:
                print("S·ªë ti·ªÅn kh√¥ng h·ª£p l·ªá!")
            except Exception as e:
                print(f"L·ªói t·∫°o giao d·ªãch: {e}")
                
        elif choice == "3":
            # X√°c th·ª±c giao d·ªãch - CH·ª®C NƒÇNG CH√çNH
            print("\nX√ÅC TH·ª∞C GIAO D·ªäCH")
            print("Ch·ªçn c√°ch x√°c th·ª±c:")
            print("1. X√°c th·ª±c giao d·ªãch m·ªõi nh·∫•t")
            print("2. X√°c th·ª±c theo ID giao d·ªãch")
            
            sub_choice = input("Ch·ªçn: ")
            
            try:
                if sub_choice == "1":
                    # L·∫•y giao d·ªãch m·ªõi nh·∫•t ƒë·ªÉ verify
                    result = full_verification_flow()
                    
                elif sub_choice == "2":
                    tx_id = input("Nh·∫≠p ID giao d·ªãch: ")
                    result = full_verification_flow(tx_id)
                    
                else:
                    print("L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!")
                    continue
                
                # Hi·ªÉn th·ªã k·∫øt qu·∫£ x√°c th·ª±c
                print("\nüîç K·∫æT QU·∫¢ X√ÅC TH·ª∞C:")
                print(f"Tr·∫°ng th√°i: {'H·ª¢P L·ªÜ' if result['valid'] else ' KH√îNG H·ª¢P L·ªÜ'}")
                print(f"Ch·ªØ k√Ω: {'ƒê√∫ng' if result['signature_valid'] else ' Sai'}")
                print(f"S·ªë d∆∞: {'ƒê·ªß' if result['balance_valid'] else ' Kh√¥ng ƒë·ªß'}")
                print(f"B·∫£o m·∫≠t: {'An to√†n' if result['fraud_check'] else ' Nghi ng·ªù gi·∫£ m·∫°o'}")
                
                if result['message']:
                    print(f"Chi ti·∫øt: {result['message']}")
                    
            except Exception as e:
                print(f"L·ªói x√°c th·ª±c: {e}")
                
        elif choice == "4":
            # Xem th√¥ng tin v√≠
            print("\n--- TH√îNG TIN V√ç ---")
            name = input("Nh·∫≠p t√™n ch·ªß v√≠: ")
            try:
                wallet_info = get_wallet_info(name)
                if wallet_info:
                    print(f"Ch·ªß v√≠: {wallet_info['name']}")
                    print(f"ƒê·ªãa ch·ªâ: {wallet_info['address']}")
                    print(f"S·ªë d∆∞: {wallet_info['balance']:,} VND")
                    print(f"Kh√≥a c√¥ng khai: {wallet_info['public_key'][:20]}...")
                else:
                    print("Kh√¥ng t√¨m th·∫•y v√≠!")
            except Exception as e:
                print(f"L·ªói: {e}")
                
        elif choice == "0":
            print("\n C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng h·ªá th·ªëng!")
            print("D·ª± √°n: X√°c th·ª±c giao d·ªãch v√≠ ƒëi·ªán t·ª≠ b·∫±ng ch·ªØ k√Ω s·ªë ECDSA")
            break
            
        else:
            print(" L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá! Vui l√≤ng ch·ªçn 0-4.")
            
        # D·ª´ng m·ªôt ch√∫t ƒë·ªÉ user ƒë·ªçc k·∫øt qu·∫£
        input("\nNh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c...")

if __name__ == "__main__":
    main()